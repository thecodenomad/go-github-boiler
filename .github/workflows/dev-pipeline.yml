name: CICD

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.17.x, 1.18.x]

    runs-on: ubuntu-latest
    steps:

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Vet
        run: |
          make vet

      - name: Run Unittests
        run: make covreport

      # Ref: https://github.com/lluuiissoo/go-testcoverage
      - name: Quality Gate - Test coverage shall be above threshold
        env:
          TESTCOVERAGE_THRESHOLD: 0
        run: |
          echo "Quality Gate: checking test coverage is above threshold ..."
          echo "Threshold             : $TESTCOVERAGE_THRESHOLD %"
          totalCoverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          echo "Current test coverage : $totalCoverage %"
          if (( $(echo "$totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
              echo "PASSED"
          else
              echo "FAILED: Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
              exit 1
          fi

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-${{ matrix.os }}-${{ matrix.go-version }}
          path: |
            coverage.out
            coverage.html

  # This is more of an example of how to push the container to dockerhub.
  # Ideally, the container would be built as a part of the build process, test would run within that
  # container, and the release process would retag that build container with the release version.
  docker-deploy:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.x

      # Make sure docker can be build (for portability reasons instead of doing githubs auto-build)
      - name: Build docker
        run: |
          make docker-run

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Docker Push
        env:
          LOCAL: 0
        run: |
          echo "Placeholder for pushing docker image" 
          make docker-push
